const e=JSON.parse('{"key":"v-b504548c","path":"/posts/framework/spring/spring_cloud_stream_three.html","title":"Spring Cloud Stream 系列（三）","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"Spring Cloud Stream 系列（三）","description":"讲述 Spring Cloud Stream 的分区、多通道功能特性","tag":["Spring Cloud","MQ"],"date":"2024-01-13T00:00:00.000Z","sticky":true,"category":["Spring Cloud","MQ"],"cover":"/assets/images/minions_cover18.jpg","icon":"mdi:mq","isOriginal":true,"head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/black-hole/posts/framework/spring/spring_cloud_stream_three.html"}],["meta",{"property":"og:site_name","content":"Black Hole"}],["meta",{"property":"og:title","content":"Spring Cloud Stream 系列（三）"}],["meta",{"property":"og:description","content":"讲述 Spring Cloud Stream 的分区、多通道功能特性"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mister-hope.github.io/black-hole/assets/images/minions_cover18.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-07T15:35:25.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"Spring Cloud Stream 系列（三）"}],["meta",{"property":"article:author","content":"YUDI-Corgi"}],["meta",{"property":"article:tag","content":"Spring Cloud"}],["meta",{"property":"article:tag","content":"MQ"}],["meta",{"property":"article:published_time","content":"2024-01-13T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-07T15:35:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Spring Cloud Stream 系列（三）\\",\\"image\\":[\\"https://mister-hope.github.io/black-hole/\\"],\\"datePublished\\":\\"2024-01-13T00:00:00.000Z\\",\\"dateModified\\":\\"2024-06-07T15:35:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"YUDI-Corgi\\",\\"url\\":\\"https://github.com/yudi-corgi\\"}]}"]]},"headers":[{"level":2,"title":"分区","slug":"分区","link":"#分区","children":[{"level":3,"title":"分区配置","slug":"分区配置","link":"#分区配置","children":[]},{"level":3,"title":"自定义分区策略","slug":"自定义分区策略","link":"#自定义分区策略","children":[]}]},{"level":2,"title":"多输入/输出参数的函数","slug":"多输入-输出参数的函数","link":"#多输入-输出参数的函数","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1717181215000,"updatedTime":1717774525000,"contributors":[{"name":"YUDI-Corgi","email":"1019509861@qq.com","commits":4}]},"readingTime":{"minutes":10.99,"words":3298},"filePathRelative":"posts/framework/spring/spring_cloud_stream_three.md","localizedDate":"2024年1月13日","excerpt":"<h2> 分区</h2>\\n<p>Spring Cloud Stream 提供对给定应用程序的多个实例之间的数据分区的支持。在分区场景中，物理通信介质（例如 Broker 的 Topic）被视为由多个分区组成。一个或多个生产者应用程序实例将数据发送到多个消费者应用程序实例，并确保以共同特征标识的数据由同一消费者实例处理。</p>\\n<p>Spring Cloud Stream 提供了一个通用抽象，用于以统一的方式实现分区处理用例。因此，无论 MQ 本身是否自然分区（如 Kafka）或不自然分区（如 RabbitMQ），都可以使用分区。</p>\\n<figure><figcaption>分区结构图</figcaption></figure>"}');export{e as data};
