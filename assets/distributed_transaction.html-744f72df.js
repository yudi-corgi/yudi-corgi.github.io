const t=JSON.parse('{"key":"v-2f69f0a0","path":"/posts/distribute/distributed_transaction.html","title":"分布式事务","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"分布式事务","description":"介绍分布式事务中常见的一致性协议","tag":["分布式事务"],"date":"2023-12-10T00:00:00.000Z","sticky":true,"category":"分布式事务","cover":"/assets/images/minions_cover14.jpg","icon":"icon-park:transaction","isOriginal":true,"head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/black-hole/posts/distribute/distributed_transaction.html"}],["meta",{"property":"og:site_name","content":"Black Hole"}],["meta",{"property":"og:title","content":"分布式事务"}],["meta",{"property":"og:description","content":"介绍分布式事务中常见的一致性协议"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mister-hope.github.io/black-hole/assets/images/minions_cover14.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-24T16:27:21.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"分布式事务"}],["meta",{"property":"article:author","content":"YUDI-Corgi"}],["meta",{"property":"article:tag","content":"分布式事务"}],["meta",{"property":"article:published_time","content":"2023-12-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-24T16:27:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"分布式事务\\",\\"image\\":[\\"https://mister-hope.github.io/black-hole/\\"],\\"datePublished\\":\\"2023-12-10T00:00:00.000Z\\",\\"dateModified\\":\\"2025-05-24T16:27:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"YUDI-Corgi\\",\\"url\\":\\"https://github.com/yudi-corgi\\"}]}"]]},"headers":[{"level":2,"title":"理论规范","slug":"理论规范","link":"#理论规范","children":[{"level":3,"title":"CAP 定理","slug":"cap-定理","link":"#cap-定理","children":[]},{"level":3,"title":"BASE 理论","slug":"base-理论","link":"#base-理论","children":[]},{"level":3,"title":"XA 规范","slug":"xa-规范","link":"#xa-规范","children":[]}]},{"level":2,"title":"2PC","slug":"_2pc","link":"#_2pc","children":[{"level":3,"title":"请求提交阶段（Commit request (or voting) phase）","slug":"请求提交阶段-commit-request-or-voting-phase","link":"#请求提交阶段-commit-request-or-voting-phase","children":[]},{"level":3,"title":"提交阶段（Commit (or completion) phase）","slug":"提交阶段-commit-or-completion-phase","link":"#提交阶段-commit-or-completion-phase","children":[]},{"level":3,"title":"2PC 缺陷","slug":"_2pc-缺陷","link":"#_2pc-缺陷","children":[]}]},{"level":2,"title":"3PC","slug":"_3pc","link":"#_3pc","children":[{"level":3,"title":"CanCommit","slug":"cancommit","link":"#cancommit","children":[]},{"level":3,"title":"PreCommit","slug":"precommit","link":"#precommit","children":[]},{"level":3,"title":"DoCommit","slug":"docommit","link":"#docommit","children":[]},{"level":3,"title":"3PC 优缺点","slug":"_3pc-优缺点","link":"#_3pc-优缺点","children":[]}]},{"level":2,"title":"TCC","slug":"tcc","link":"#tcc","children":[{"level":3,"title":"TCC 事务操作","slug":"tcc-事务操作","link":"#tcc-事务操作","children":[]},{"level":3,"title":"详解","slug":"详解","link":"#详解","children":[]},{"level":3,"title":"异常处理","slug":"异常处理","link":"#异常处理","children":[]},{"level":3,"title":"TCC 实现框架","slug":"tcc-实现框架","link":"#tcc-实现框架","children":[]}]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1710067331000,"updatedTime":1748104041000,"contributors":[{"name":"YUDI-Corgi","email":"1019509861@qq.com","commits":2}]},"readingTime":{"minutes":13.18,"words":3954},"filePathRelative":"posts/distribute/distributed_transaction.md","localizedDate":"2023年12月10日","excerpt":"<p>分布式事务是在分布式系统下绕不开的一个话题，它的概念是指：<strong>在分布式系统下，一个业务跨多个服务或数据源，每个服务都是一个分支事务，要保证多个分支事务最终一致性，即为分布式事务</strong>。本篇便是来介绍常见的几种分布式事务实现方案。</p>\\n<h2> 理论规范</h2>\\n<p>先来了解下分布式领域的一些定理。</p>\\n<h3> CAP 定理</h3>\\n<p>分布式系统的三个指标：在分布式系统中，最多只能实现其中的两点，由于网络硬件肯定会出现延迟丢包等问题，所以分区容错性是必须实现的，因此只能在一致性和可用性之间进行权衡。</p>\\n<ul>\\n<li>一致性（Consistency）：用户访问分布式系统中的任意节点，得到的数据都是一致的</li>\\n<li>可用性（Availability）：分布式系统中任意健康节点在任何时候都可以读写</li>\\n<li>分区容错性（Partition tolerance）：在网络故障、某些节点不能通信的时候系统仍能继续工作\\n<ul>\\n<li>分区（Partition）：因为网络故障或其它原因导致分布式系统中的部分节点与其它节点失去连接，形成独立分区</li>\\n<li>容错（Tolerance）：在出现分区情况时，系统也要持续对外提供服务</li>\\n</ul>\\n</li>\\n</ul>"}');export{t as data};
